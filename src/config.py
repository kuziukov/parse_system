from functools import lru_cache

from pydantic import BaseSettings

"""
Задание:
Сайт: https://www.apkmirror.com/

Необходимо: реализовать рекурсивный обход сайта и получить 30.000 конечных ссылок на скачивание дистрибутивов.
Промежуточные ссылки не нужны.

Nice to have: скачать и распаковать с помощью 7 zip архивы. Сформировать по распакованным файлам список
“архив – файл – тип - размер”

Ограничения по времени реализации нет, но будет здорово если вариант пришлет через неделю, либо кандидат укажет
сам срок.
Вариант , при котором кандидат опишет / нарисует архитектуру и реализует в полном объеме один из модулей
с указанием скоупа реализации (тесты , функциональные ограничения, зоны улучшения и дальнейшего роста) ,
также подходит.

"""


class Config(BaseSettings):
    version: str = '0.0.1'
    project_name: str = 'parser_system'
    debug: bool = False
    rabbit_uri: str

    class Config:
        env_file = 'config/.env'


@lru_cache
def get_config() -> Config:
    return Config()
